{"ast":null,"code":"var _jsxFileName = \"/home/amad/Downloads/supply_chain/SCG/src/components/Output.js\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ProductCount from './ProductCount';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport \"./Output.css\";\n\nclass Output extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.setUpListeners();\n    };\n\n    this.setUpListeners = () => {\n      this.cy.on('click', 'node', event => {\n        if (event.target._private.data.id !== \"US\") this.props.handleGraphClick(event);\n      });\n    };\n  }\n\n  render() {\n    const elements = [{\n      data: {\n        id: 'KW',\n        label: 'Ke-Wan Thum Inc.'\n      },\n      position: {\n        x: 0,\n        y: 0\n      },\n      aaa: {\n        x: 0,\n        y: 0\n      }\n    }, {\n      data: {\n        id: 'WWR',\n        label: 'W.W.R. Industries'\n      },\n      position: {\n        x: 100,\n        y: 0\n      }\n    }, {\n      data: {\n        id: 'ADD',\n        label: 'A.A.D.'\n      },\n      position: {\n        x: 100,\n        y: 0\n      }\n    }, {\n      data: {\n        id: 'IP',\n        label: 'I.P.'\n      },\n      position: {\n        x: 100,\n        y: 0\n      }\n    }, {\n      data: {\n        id: 'DP',\n        label: 'D.P.'\n      },\n      position: {\n        x: 0,\n        y: 0\n      }\n    }, {\n      data: {\n        id: 'US',\n        label: 'US Inc.'\n      },\n      position: {\n        x: 0,\n        y: 0\n      }\n    }, {\n      data: {\n        source: 'KW',\n        target: 'US',\n        label: ' '\n      }\n    }, {\n      data: {\n        source: 'WWR',\n        target: 'US',\n        label: ' '\n      }\n    }, {\n      data: {\n        source: 'ADD',\n        target: 'US',\n        label: ' '\n      }\n    }, {\n      data: {\n        source: 'IP',\n        target: 'US',\n        label: ' '\n      }\n    }, {\n      data: {\n        source: 'DP',\n        target: 'US',\n        label: ' '\n      }\n    }];\n    const cyLayout = {\n      name: 'concentric',\n      minNodeSpacing: 60,\n      edgeElasticity: function (edge) {\n        return 0;\n      },\n      animate: true,\n      fit: true\n    };\n    const cyStyle = {\n      width: '300px',\n      height: '300px'\n    };\n    const stylesheet = [{\n      selector: 'node',\n      style: {\n        'background-color': '#3b5998',\n        'label': 'data(label)'\n      }\n    }, {\n      selector: 'edge',\n      style: {\n        'width': 3,\n        'line-color': '#ccc',\n        'target-arrow-color': '#ccc',\n        'target-arrow-shape': 'triangle',\n        'curve-style': 'bezier'\n      }\n    }];\n    const {\n      weekStart,\n      weekEnd,\n      results\n    } = this.props.week.simOutput;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CytoscapeComponent, {\n      cy: cy => {\n        this.cy = cy;\n      },\n      elements: elements,\n      layout: cyLayout,\n      style: cyStyle,\n      stylesheet: stylesheet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Week Results\"), /*#__PURE__*/React.createElement(Row, {\n      className: \"output\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"Income:\"), /*#__PURE__*/React.createElement(Col, {\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, results.income, \"$\")), /*#__PURE__*/React.createElement(Row, {\n      className: \"output\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, \"Storage cost:\"), /*#__PURE__*/React.createElement(Col, {\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, results.storageCost, \"$\")), /*#__PURE__*/React.createElement(Row, {\n      className: \"output\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, \"Total order cost:\"), /*#__PURE__*/React.createElement(Col, {\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, results.ordersCost, \"$\")), /*#__PURE__*/React.createElement(Row, {\n      className: \"output\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, \"Profit:\"), /*#__PURE__*/React.createElement(Col, {\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, results.profit, \"$\")), /*#__PURE__*/React.createElement(Row, {\n      className: \"output\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \"Accumulated profit:\"), /*#__PURE__*/React.createElement(Col, {\n      md: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, results.accumulatedProfit, \"$\"))), /*#__PURE__*/React.createElement(ProductCount, {\n      title: \"Week Start\",\n      weekCount: weekStart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ProductCount, {\n      title: \"Week End\",\n      weekCount: weekEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default Output;","map":{"version":3,"sources":["/home/amad/Downloads/supply_chain/SCG/src/components/Output.js"],"names":["React","Container","Row","Col","ProductCount","CytoscapeComponent","Output","PureComponent","componentDidMount","setUpListeners","cy","on","event","target","_private","data","id","props","handleGraphClick","render","elements","label","position","x","y","aaa","source","cyLayout","name","minNodeSpacing","edgeElasticity","edge","animate","fit","cyStyle","width","height","stylesheet","selector","style","weekStart","weekEnd","results","week","simOutput","income","storageCost","ordersCost","profit","accumulatedProfit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ProductCount from './ProductCount';\nimport CytoscapeComponent from 'react-cytoscapejs'\n\nimport \"./Output.css\"\n  \nclass Output extends React.PureComponent {\n\n    componentDidMount = () => {\n        this.setUpListeners()\n    }\n      \n    setUpListeners = () => {\n        this.cy.on('click', 'node', (event) => {\n            if(event.target._private.data.id !== \"US\")\n                this.props.handleGraphClick(event)\n        })\n    }\n\n    render(){\n        const elements = [\n           { data: { id: 'KW', label: 'Ke-Wan Thum Inc.' }, position: { x: 0, y: 0 },aaa: { x: 0, y: 0 } },\n           { data: { id: 'WWR', label: 'W.W.R. Industries' }, position: { x: 100, y: 0 } },\n           { data: { id: 'ADD', label: 'A.A.D.' }, position: { x: 100, y: 0 } },\n           { data: { id: 'IP', label: 'I.P.' }, position: { x: 100, y: 0 } },\n           { data: { id: 'DP', label: 'D.P.' }, position: { x: 0, y: 0 } },\n           { data: { id: 'US', label: 'US Inc.' }, position: { x: 0, y: 0 } },\n\n           { data: { source: 'KW', target: 'US', label: ' ' } },\n           { data: { source: 'WWR', target: 'US', label: ' ' } },\n           { data: { source: 'ADD', target: 'US', label: ' ' } },\n           { data: { source: 'IP', target: 'US', label: ' ' } },\n           { data: { source: 'DP', target: 'US', label: ' ' } },\n        ];\n    \n        const cyLayout = {\n            name: 'concentric',\n            minNodeSpacing: 60,\n            edgeElasticity: function( edge ){ return 0; },\n            animate: true,\n            fit: true,\n        }\n\n        const cyStyle = {\n            width: '300px',\n            height: '300px',\n        }\n\n        const stylesheet = [\n            {\n                selector: 'node',\n                style: {\n                    'background-color': '#3b5998',\n                    'label': 'data(label)'\n                }\n            },\n            {\n                selector: 'edge',\n                style: {\n                    'width': 3,\n                    'line-color': '#ccc',\n                    'target-arrow-color': '#ccc',\n                    'target-arrow-shape': 'triangle',\n                    'curve-style': 'bezier'\n                }\n            }\n        ]\n        const {weekStart, weekEnd, results} = this.props.week.simOutput;\n        return (\n        <Container>\n            <Row>\n            <Col md=\"auto\"> \n                <CytoscapeComponent cy={(cy) => {this.cy = cy}} elements={elements} \n                    layout= {cyLayout} style={cyStyle} stylesheet={stylesheet} />\n            </Col>\n            <Col md=\"auto\">\n                <p className=\"title\">Week Results</p>\n                <Row className=\"output\">\n                    <Col>Income:</Col>\n                    <Col md=\"auto\">{results.income}$</Col>\n                </Row>\n                <Row className=\"output\">\n                    <Col>Storage cost:</Col>\n                    <Col md=\"auto\">{results.storageCost}$</Col>\n                </Row>\n                <Row className=\"output\">\n                    <Col>Total order cost:</Col>\n                    <Col md=\"auto\">{results.ordersCost}$</Col>\n                </Row>\n                <Row className=\"output\">\n                    <Col>Profit:</Col>\n                    <Col md=\"auto\">{results.profit}$</Col>\n                </Row>\n                <Row className=\"output\">\n                    <Col>Accumulated profit:</Col>\n                    <Col md=\"auto\">{results.accumulatedProfit}$</Col>\n                </Row>\n            </Col>\n            <ProductCount title=\"Week Start\" weekCount={weekStart}/>\n            <ProductCount title=\"Week End\" weekCount={weekEnd}/>\n            </Row>\n        </Container>\n        )\n    }\n}\n\nexport default Output;\n"]},"metadata":{},"sourceType":"module"}