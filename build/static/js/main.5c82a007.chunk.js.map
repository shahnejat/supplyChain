{"version":3,"sources":["components/Header.js","components/WeekList.js","components/WeekBar.js","components/OrdersForm.js","components/DemandsSellsForm.js","components/Input.js","components/ProductCount.js","components/Output.js","core/constants.js","core/simulate.js","components/App.js","index.js"],"names":["Header","style","textAlign","color","React","PureComponent","WeekList","className","WeekBar","md","this","props","currentWeek","ProgressBar","now","OrdersForm","handleInput","event","action","title","name","target","value","supplier","orders","enabled","enabledOrders","info","supplierData","find","ele","supplierId","id","Fragment","label","Form","Row","Group","as","Col","Control","type","min","a","placeholder","disabled","onChange","b","c","DemandsSellsForm","simInput","input","demands","sells","Input","handleNextButton","Container","Button","variant","block","onClick","ProductCount","weekCount","stockA","stockB","stockC","Output","componentDidMount","setUpListeners","cy","on","_private","data","handleGraphClick","week","simOutput","weekStart","weekEnd","results","elements","position","x","y","aaa","source","layout","minNodeSpacing","edgeElasticity","edge","animate","fit","width","height","stylesheet","selector","income","storageCost","ordersCost","profit","accumulatedProfit","companyCatalogue","KW","DISCOUNT_UNIT_THRESHOLD","TYPICAL_SHIPPING_COST","FREE_SHIPPING_THRESHOLD","UNIT_PRICE_A_ABOVE_DISCOUNT_THRESHOLD","UNIT_PRICE_A_BELOW_DISCOUNT_THRESHOLD","UNIT_PRICE_B_ABOVE_DISCOUNT_THRESHOLD","UNIT_PRICE_B_BELOW_DISCOUNT_THRESHOLD","UNIT_PRICE_C_ABOVE_DISCOUNT_THRESHOLD","UNIT_PRICE_C_BELOW_DISCOUNT_THRESHOLD","DELAY_IN_WEEKS","RECEPTION_COST","WWR","ADD","IP","DP","Core","weeks","newState","sellsA","sellsB","newIncome","update","$set","startStock","weekstartStock","weekendStock","totalWeeklyStorageCost","toFixed","length","cumulativeProfit","index","currentWeekIndex","console","log","updateAccumulatedProfit","updateProfit","state","sellsProduct2","sellsProduct1","isNaN","parseInt","toLowerCase","updateIncome","updateWeekendStock","updateStorageCost","updateProfitSubTree","demandsProduct1","orderCostFromADD","orderCostFromIP","orderCostFromDP","new_OrderCost_ABCWWR","new_OrderCost_ABCKW","indexSupplier","findIndex","computedShippingCostByKW","computedShippingCostByWWR","receptionCostForKW","receptionCostForWWR","receptionCostForADD","receptionCostForIP","receptionCostForDP","totalOrderCost","updateSells","updateDemands","updateOrders","createWeek","deliveryTime","includeWeekend","newWeek","updateWeekstartSupplier","push","updateWeekstartStock","App","core","advanceSimulation","setState","simulate","supplierSelected","initWeek","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c82a007.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.PureComponent {\n    render() { \n        return <h1 style={{textAlign: 'center', color: \"#3b5998\"}} >Supply Chain Game</h1>;\n    }\n}\n \nexport default Header;","import React from 'react';\nimport \"./WeekList.css\";\nimport \"bootstrap/dist/css/bootstrap.css\"\n\nclass WeekList extends React.PureComponent {\n    render() { \n        return ( \n            <div className=\"vertical-menu\">\n                \n            </div>\n        );\n    }\n}\n \nexport default WeekList;\n\n/*<a href=\"#\" className=\"active\">Week History</a>\n                <a href=\"#\">Week 1</a>\n                <a href=\"#\">Week 2</a>\n                <a href=\"#\">Week 3</a>\n                <a href=\"#\">Week 4</a>\n                <a href=\"#\">Week 5</a>\n                <a href=\"#\">Week 6</a>\n                <a href=\"#\">Week 7</a>\n                <a href=\"#\">Week 8</a>\n                <a href=\"#\">Week 8</a>\n                <a href=\"#\">Week 9</a>\n                <a href=\"#\">Week 11</a>\n                <a href=\"#\">Week 12</a>\n                <a href=\"#\">Week 13</a>\n                <a href=\"#\">Week 14</a>*/","import React from 'react';\nimport \"./WeekBar.css\";\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n//import { Container, Row, Col } from 'react-bootstrap';\n\nclass WeekBar extends React.PureComponent {\n    render() { \n        return (\n            <div className=\"week-bar\">  \n                <span className=\"span\" md=\"auto\">Current Week: {`${this.props.currentWeek}`} </span>\n                <ProgressBar className='pbar' now={this.props.currentWeek} />\n            </div>\n        );\n    }\n}\n/*<Container>\n    <Row>\n    <Col className=\"inline\" md=\"auto\">Current Week:</Col>\n    <Col><ProgressBar className='pbar' now={now} label={`${now}`} /></Col>\n    </Row>\n</Container>   */\nexport default WeekBar;","import React from 'react';\nimport { Col } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form'\n\nclass OrdersForm extends React.PureComponent {\n\n    handleInput = (event) => {\n        this.props.handleInput({action: this.props.title,\n            name: event.target.name, value: event.target.value});\n    };\n\n    render() { \n        const {supplier, title, orders} = this.props;\n        const enabled = supplier.enabledOrders;\n\n        if(!supplier.info) {\n            return <p className=\"title\"> Please choose a supplier by clicking a node in the graph. </p>\n        }\n\n        const supplierData = orders.find(ele => ele.supplierId === supplier.info.id);\n\n\n        return (\n        <React.Fragment>\n        <p className=\"title\"> {title} ({supplier.info.label}) </p>\n        <Form>\n            <Form.Row>\n            <Form.Group as={Col}>\n                <Form.Control className=\"itemA\" type=\"number\" min=\"0\" name=\"A\"\n                     value={supplierData.a || \"\"} placeholder=\"A\" disabled={!enabled.a}\n                     onChange={this.handleInput}/>\n            </Form.Group>\n            <Form.Group as={Col}>\n                <Form.Control className=\"itemB\" type=\"number\" min=\"0\" name=\"B\"\n                     value={supplierData.b || \"\"} placeholder=\"B\" disabled={!enabled.b}\n                     onChange={this.handleInput}/>\n            </Form.Group>\n            <Form.Group as={Col}>\n                <Form.Control className=\"itemC\" type=\"number\" min=\"0\" name=\"C\"\n                     value={supplierData.c || \"\"} placeholder=\"C\" disabled={!enabled.c}\n                     onChange={this.handleInput}/>\n            </Form.Group>\n            </Form.Row>\n        </Form>\n        </React.Fragment>\n        );\n    }\n}\n \nexport default OrdersForm;","import React from 'react';\nimport { Col } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form'\n\nclass DemandsSellsForm extends React.PureComponent {\n    \n    handleInput = (event) => {\n        this.props.handleInput({action: this.props.title,\n            name: event.target.name, value: event.target.value});\n    };\n\n    render() { \n        const {title, simInput} = this.props;\n        let input = title === \"Demands\" ? simInput.demands : null;\n        input = title === \"Sells\" ? simInput.sells : input;\n\n        return (\n        <React.Fragment>\n        <p className=\"title\"> {title} </p>\n        <Form>\n            <Form.Row>\n            <Form.Group as={Col}>\n                <Form.Control className=\"itemA\" type=\"number\" min=\"0\" name=\"A\"\n                     value={input.a || \"\"} placeholder=\"A\" onChange={this.handleInput}/>\n            </Form.Group>\n            <Form.Group as={Col}>\n                <Form.Control className=\"itemB\" type=\"number\" min=\"0\" name=\"B\"\n                     value={input.b || \"\"} placeholder=\"B\" onChange={this.handleInput}/>\n            </Form.Group>\n            <Form.Group as={Col}>\n                <Form.Control className=\"itemC\" type=\"number\" min=\"0\" name=\"C\"\n                     value={input.c || \"\"} placeholder=\"C\" onChange={this.handleInput}\n                     disabled={true}/>\n            </Form.Group>\n            </Form.Row>\n        </Form>\n        </React.Fragment>\n        );\n    }\n}\n \nexport default DemandsSellsForm;","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport OrdersForm from './OrdersForm';\nimport DemandsSellsForm from './DemandsSellsForm';\nimport Button from 'react-bootstrap/Button'\nimport { Row, Col } from 'react-bootstrap';\n\nclass Input extends React.PureComponent {\n    render() { \n        const {simInput, handleNextButton, supplier, handleInput} = this.props;\n        \n        return (\n        <Container>\n        <DemandsSellsForm title=\"Demands\" simInput={simInput}\n            handleInput={handleInput}/>\n        <DemandsSellsForm title=\"Sells\" simInput={simInput} \n            handleInput={handleInput}/>\n        <OrdersForm supplier={supplier} title=\"Orders\"\n            orders={simInput.orders} handleInput={handleInput}/>\n        <Row>  \n            <Col><Button disabled={true} variant=\"outline-primary\" block>Previous</Button></Col>\n            <Col><Button disabled={true} variant=\"outline-primary\" block>Reset</Button></Col>\n            <Col>\n                <Button onClick={handleNextButton} \n                    variant=\"outline-primary\" block>Next\n                </Button>\n            </Col>\n        </Row>\n        </Container>\n        );\n    }\n}\n\nexport default Input;","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nclass ProductCount extends React.PureComponent {\n    \n    render() { \n        return ( \n        <Col>\n        <p className=\"title\"> {this.props.title} </p>\n        <Row className=\"itemA\">  \n            <Col>A:</Col> \n            <Col md=\"auto\">{this.props.weekCount.stockA}</Col> \n        </Row>\n        <Row className=\"itemB\">  \n            <Col>B:</Col> \n            <Col md=\"auto\">{this.props.weekCount.stockB}</Col> \n        </Row>\n        <Row className=\"itemC\">  \n            <Col>C:</Col>  \n            <Col md=\"auto\">{this.props.weekCount.stockC}</Col> \n        </Row>\n        </Col>\n        );\n    }\n}\n \nexport default ProductCount;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ProductCount from './ProductCount';\nimport CytoscapeComponent from 'react-cytoscapejs'\n\nimport \"./Output.css\"\n  \nclass Output extends React.PureComponent {\n\n    componentDidMount = () => {\n        this.setUpListeners()\n    }\n      \n    setUpListeners = () => {\n        this.cy.on('click', 'node', (event) => {\n            if(event.target._private.data.id !== \"US\")\n                this.props.handleGraphClick(event)\n        })\n    }\n\n    render(){\n        const elements = [\n           { data: { id: 'KW', label: 'Ke-Wan Thum Inc.' }, position: { x: 0, y: 0 },aaa: { x: 0, y: 0 } },\n           { data: { id: 'WWR', label: 'W.W.R. Industries' }, position: { x: 100, y: 0 } },\n           { data: { id: 'ADD', label: 'A.A.D.' }, position: { x: 100, y: 0 } },\n           { data: { id: 'IP', label: 'I.P.' }, position: { x: 100, y: 0 } },\n           { data: { id: 'DP', label: 'D.P.' }, position: { x: 0, y: 0 } },\n           { data: { id: 'US', label: 'US Inc.' }, position: { x: 0, y: 0 } },\n\n           { data: { source: 'KW', target: 'US', label: ' ' } },\n           { data: { source: 'WWR', target: 'US', label: ' ' } },\n           { data: { source: 'ADD', target: 'US', label: ' ' } },\n           { data: { source: 'IP', target: 'US', label: ' ' } },\n           { data: { source: 'DP', target: 'US', label: ' ' } },\n        ];\n    \n        const cyLayout = {\n            name: 'concentric',\n            minNodeSpacing: 60,\n            edgeElasticity: function( edge ){ return 0; },\n            animate: true,\n            fit: true,\n        }\n\n        const cyStyle = {\n            width: '300px',\n            height: '300px',\n        }\n\n        const stylesheet = [\n            {\n                selector: 'node',\n                style: {\n                    'background-color': '#3b5998',\n                    'label': 'data(label)'\n                }\n            },\n            {\n                selector: 'edge',\n                style: {\n                    'width': 3,\n                    'line-color': '#ccc',\n                    'target-arrow-color': '#ccc',\n                    'target-arrow-shape': 'triangle',\n                    'curve-style': 'bezier'\n                }\n            }\n        ]\n        const {weekStart, weekEnd, results} = this.props.week.simOutput;\n        return (\n        <Container>\n            <Row>\n            <Col md=\"auto\"> \n                <CytoscapeComponent cy={(cy) => {this.cy = cy}} elements={elements} \n                    layout= {cyLayout} style={cyStyle} stylesheet={stylesheet} />\n            </Col>\n            <Col md=\"auto\">\n                <p className=\"title\">Week Results</p>\n                <Row className=\"output\">\n                    <Col>Income:</Col>\n                    <Col md=\"auto\">{results.income}$</Col>\n                </Row>\n                <Row className=\"output\">\n                    <Col>Storage cost:</Col>\n                    <Col md=\"auto\">{results.storageCost}$</Col>\n                </Row>\n                <Row className=\"output\">\n                    <Col>Total order cost:</Col>\n                    <Col md=\"auto\">{results.ordersCost}$</Col>\n                </Row>\n                <Row className=\"output\">\n                    <Col>Profit:</Col>\n                    <Col md=\"auto\">{results.profit}$</Col>\n                </Row>\n                <Row className=\"output\">\n                    <Col>Accumulated profit:</Col>\n                    <Col md=\"auto\">{results.accumulatedProfit}$</Col>\n                </Row>\n            </Col>\n            <ProductCount title=\"Week Start\" weekCount={weekStart}/>\n            <ProductCount title=\"Week End\" weekCount={weekEnd}/>\n            </Row>\n        </Container>\n        )\n    }\n}\n\nexport default Output;\n","export const UNIT_PRICE_A = 15;\nexport const UNIT_PRICE_B = 12;\n\nexport const STORAGE_UNIT_COST_A = 0.075;\nexport const STORAGE_UNIT_COST_B = 0.06;\nexport const STORAGE_UNIT_COST_C = 0.01;\n\nconst companyCatalogue = {\n  KW:\n    {\n      supplierId: \"KW\",\n      DISCOUNT_UNIT_THRESHOLD: 100,\n      TYPICAL_SHIPPING_COST: 80,\n      FREE_SHIPPING_THRESHOLD: 1000,\n      UNIT_PRICE_A_ABOVE_DISCOUNT_THRESHOLD: 4,\n      UNIT_PRICE_A_BELOW_DISCOUNT_THRESHOLD: 5,\n      UNIT_PRICE_B_ABOVE_DISCOUNT_THRESHOLD: 2.5,\n      UNIT_PRICE_B_BELOW_DISCOUNT_THRESHOLD: 3,\n      UNIT_PRICE_C_ABOVE_DISCOUNT_THRESHOLD: 1,\n      UNIT_PRICE_C_BELOW_DISCOUNT_THRESHOLD: 1,\n      DELAY_IN_WEEKS: 1,\n      RECEPTION_COST: 80,\n    },\n  WWR: \n    {\n      supplierId: \"WWR\",\n      DISCOUNT_UNIT_THRESHOLD: 300,\n      TYPICAL_SHIPPING_COST: 200,\n      FREE_SHIPPING_THRESHOLD: 3000,\n      UNIT_PRICE_A_ABOVE_DISCOUNT_THRESHOLD: 3,\n      UNIT_PRICE_B_ABOVE_DISCOUNT_THRESHOLD: 2,\n      UNIT_PRICE_C_ABOVE_DISCOUNT_THRESHOLD: 0.5,\n      DELAY_IN_WEEKS: 4,\n      RECEPTION_COST: 80,\n    },\n  ADD:\n    {\n      supplierId: \"ADD\",\n      UNIT_PRICE_A_ABOVE_DISCOUNT_THRESHOLD: 7,\n      DELAY_IN_WEEKS: 0,\n      RECEPTION_COST: 80,\n    },\n  IP:\n    {\n      supplierId: \"IP\",\n      UNIT_PRICE_B_ABOVE_DISCOUNT_THRESHOLD: 6,\n      DELAY_IN_WEEKS: 0,\n      RECEPTION_COST: 80,\n    },\n  DP:\n    {\n      supplierId: \"DP\",\n      UNIT_PRICE_C_ABOVE_DISCOUNT_THRESHOLD: 2,\n      DELAY_IN_WEEKS: 0,\n      RECEPTION_COST: 80,\n    }\n};\nexport default companyCatalogue;\n","import update from \"immutability-helper\";\nimport { UNIT_PRICE_A, UNIT_PRICE_B } from \"./constants.js\";\nimport {\n  STORAGE_UNIT_COST_A,\n  STORAGE_UNIT_COST_B,\n  STORAGE_UNIT_COST_C,\n} from \"./constants\";\nimport companyCatalogue from \"./constants.js\";\n\nexport class Core {\n  constructor() {\n    this.weeks = [];\n  }\n\n  createWeek() {\n    return {\n      simInput: {\n        demands: { a: 0, b: 0, c: 0 },\n        sells: { a: 0, b: 0, c: 0 },\n        orders: [\n          { supplierId: \"KW\", a: 0, b: 0, c: 0 },\n          { supplierId: \"WWR\", a: 0, b: 0, c: 0 },\n          { supplierId: \"ADD\", a: 0, b: 0, c: 0 },\n          { supplierId: \"IP\", a: 0, b: 0, c: 0 },\n          { supplierId: \"DP\", a: 0, b: 0, c: 0 },\n        ],\n      },\n      simOutput: {\n        weekStart: {\n          stockA: 0,\n          stockB: 0,\n          stockC: 0,\n        },\n        weekEnd: {\n          stockA: 0,\n          stockB: 0,\n          stockC: 0,\n        },\n        results: {\n          income: 0,\n          storageCost: 0,\n          ordersCost: 0,\n          profit: 0,\n          accumulatedProfit: 0,\n        },\n      },\n    };\n  }\n\n  updateIncome(newState, sellsA, sellsB) {\n    const newIncome = sellsA * UNIT_PRICE_A + sellsB * UNIT_PRICE_B;\n\n    return update(newState, {\n      week: {\n        simOutput: {\n          results: {\n            income: {\n              $set: newIncome,\n            },\n          },\n        },\n      },\n    });\n  }\n\n  updateWeekendStock(newState, startStock, sells) {\n    return update(newState, {\n      week: {\n        simOutput: {\n          weekEnd: {\n            $set: {\n              stockA: startStock.stockA - sells.a,\n              stockB: startStock.stockB - sells.b,\n              stockC: startStock.stockC - sells.c,\n            },\n          },\n        },\n      },\n    });\n  }\n\n  updateStorageCost(newState, weekstartStock, weekendStock) {\n    const weeklyStorageCost1 =\n      ((weekstartStock.stockA + weekendStock.stockA) / 2) * STORAGE_UNIT_COST_A;\n    const weeklyStorageCost2 =\n      ((weekstartStock.stockB + weekendStock.stockB) / 2) * STORAGE_UNIT_COST_B;\n    const weeklyStorageCost3 =\n      ((weekstartStock.stockC + weekendStock.stockC) / 2) * STORAGE_UNIT_COST_C;\n    const totalWeeklyStorageCost = (\n      weeklyStorageCost1 +\n      weeklyStorageCost2 +\n      weeklyStorageCost3\n    ).toFixed(2);\n    return update(newState, {\n      week: {\n        simOutput: {\n          results: { storageCost: { $set: totalWeeklyStorageCost } },\n        },\n      },\n    });\n  }\n\n  updateProfit(newState) {\n    const income = newState.week.simOutput.results.income;\n    const totalWeeklyStorageCost = newState.week.simOutput.results.storageCost;\n    const totalOrderCost = newState.week.simOutput.results.ordersCost;\n    const profit = income - totalWeeklyStorageCost - totalOrderCost;\n\n    return update(newState, {\n      week: {\n        simOutput: {\n          results: { profit: { $set: profit } },\n        },\n      },\n    });\n  }\n\n  currentWeekIndex() {\n    return (\n      this.weeks.length -\n      1 +\n      1 /* current week is not pushed yet */ -\n      1 /* previous week */\n    );\n  }\n\n  updateAccumulatedProfit(newState) {\n    // Compute the accumulated profit\n    const index = this.currentWeekIndex();\n    let cumulativeProfit;\n    console.log(index);\n    if (index >= 0) {\n      cumulativeProfit =\n        newState.week.simOutput.results.profit +\n        this.weeks[index].simOutput.results.accumulatedProfit;\n    } else {\n      cumulativeProfit = newState.week.simOutput.results.profit;\n    }\n    return update(newState, {\n      week: {\n        simOutput: {\n          results: { accumulatedProfit: { $set: cumulativeProfit } },\n        },\n      },\n    });\n  }\n\n  updateProfitSubTree(newState) {\n    return this.updateAccumulatedProfit(this.updateProfit(newState));\n  }\n\n  updateSells(state, event) {\n    const sells = state.week.simInput.sells;\n    const sellsProduct2 = event.name === \"A\" ? sells.b : sells.a;\n    const sellsProduct1 = isNaN(parseInt(event.value))\n      ? 0\n      : parseInt(event.value);\n\n    // Update the state with the new input.\n    let newState = update(state, {\n      week: {\n        simInput: {\n          sells: {\n            [event.name.toLowerCase()]: {\n              $set: sellsProduct1,\n            },\n          },\n        },\n      },\n    });\n\n    // Compute the new sells of C and update the state.\n    newState = update(newState, {\n      week: {\n        simInput: {\n          sells: {\n            c: {\n              $set: sellsProduct1 + sellsProduct2,\n            },\n          },\n        },\n      },\n    });\n\n    // Compute and update the new income.\n    // TODO: Error check (=IF(OR((G4>E4),(H4>F4)),\"ERROR\",G4*$'Prix de vente'.$A$2+H4*$'Prix de vente'.$B$2))\n    newState =\n      event.name === \"A\"\n        ? this.updateIncome(newState, sellsProduct1, sellsProduct2)\n        : this.updateIncome(newState, sellsProduct2, sellsProduct1);\n\n    // Update week end stock.\n    const startStock = newState.week.simOutput.weekStart;\n    newState = this.updateWeekendStock(\n      newState,\n      startStock,\n      newState.week.simInput.sells\n    );\n\n    // Compute the storage cost.\n    newState = this.updateStorageCost(\n      newState,\n      newState.week.simOutput.weekStart,\n      newState.week.simOutput.weekEnd\n    );\n\n    // Compute the profit and accumulated profit\n    newState = this.updateProfitSubTree(newState);\n\n    return newState;\n  }\n\n  updateDemands(state, event) {\n    const demandsProduct1 = isNaN(parseInt(event.value))\n      ? 0\n      : parseInt(event.value);\n\n    // Update the state with the new input.\n    let newState = update(state, {\n      week: {\n        simInput: {\n          demands: {\n            [event.name.toLowerCase()]: {\n              $set: demandsProduct1,\n            },\n          },\n        },\n      },\n    });\n\n    return newState;\n  }\n\n  updateOrders(state, event) {\n    const supplierId = state.supplier.info.id;\n    const indexSupplier = state.week.simInput.orders.findIndex(\n      (ele) => ele.supplierId === supplierId\n    );\n    const value = isNaN(parseInt(event.value)) ? 0 : parseInt(event.value);\n\n    // Update the state with the new input.\n    let newState = update(state, {\n      week: {\n        simInput: {\n          orders: {\n            [indexSupplier]: {\n              [event.name.toLowerCase()]: { $set: value },\n            },\n          },\n        },\n      },\n    });\n\n    // Compute the net order cost of units for KW excluding the shipping cost\n    let computedOrderCostForAKW = 0;\n    let computedOrderCostForBKW = 0;\n    let computedShippingCostByKW = 0;\n    let computedShippingCostByWWR = 0;\n    let orderCostFromADD = 0;\n    let orderCostFromIP = 0;\n    let orderCostFromDP = 0;\n    let receptionCostForKW = 0;\n    let receptionCostForWWR = 0;\n    let receptionCostForADD = 0;\n    let receptionCostForIP = 0;\n    let receptionCostForDP = 0;\n\n    let new_OrderCost_AWWR = 0;\n    let new_OrderCost_BWWR = 0;\n    let new_OrderCost_CWWR = 0;\n    let new_OrderCost_ABCWWR = 0;\n    let new_OrderCost_AKW = 0;\n    let new_OrderCost_BKW = 0;\n    let new_OrderCost_CKW = 0;\n    let new_OrderCost_ABCKW = 0;\n\n    if (\n      newState.week.simInput.orders[0].a >\n      companyCatalogue.KW.DISCOUNT_UNIT_THRESHOLD\n    ) {\n      new_OrderCost_AKW =\n      newState.week.simInput.orders[0].a *\n        companyCatalogue.KW.UNIT_PRICE_A_ABOVE_DISCOUNT_THRESHOLD;\n      //computedOrderCostForAKW =\n      //companyCatalogue.KW.UNIT_PRICE_A_ABOVE_DISCOUNT_THRESHOLD;\n    } else {\n      new_OrderCost_AKW =\n      newState.week.simInput.orders[0].a *\n        companyCatalogue.KW.UNIT_PRICE_A_BELOW_DISCOUNT_THRESHOLD;\n      //computedOrderCostForAKW =\n      //companyCatalogue.KW.UNIT_PRICE_A_BELOW_DISCOUNT_THRESHOLD;\n    }\n\n    if (\n      newState.week.simInput.orders[0].b >\n      companyCatalogue.KW.DISCOUNT_UNIT_THRESHOLD\n    ) {\n      new_OrderCost_BKW =\n      newState.week.simInput.orders[0].b *\n        companyCatalogue.KW.UNIT_PRICE_B_ABOVE_DISCOUNT_THRESHOLD;\n      //computedOrderCostForBKW =\n      //companyCatalogue.KW.UNIT_PRICE_B_ABOVE_DISCOUNT_THRESHOLD;\n    } else {\n      new_OrderCost_BKW =\n      newState.week.simInput.orders[0].b *\n        companyCatalogue.KW.UNIT_PRICE_B_BELOW_DISCOUNT_THRESHOLD;\n      //computedOrderCostForBKW =\n      //companyCatalogue.KW.UNIT_PRICE_B_BELOW_DISCOUNT_THRESHOLD;\n    }\n    new_OrderCost_CKW =\n    newState.week.simInput.orders[0].c *\n      companyCatalogue.KW.UNIT_PRICE_C_BELOW_DISCOUNT_THRESHOLD;\n    new_OrderCost_ABCKW =\n      new_OrderCost_AKW + new_OrderCost_BKW + new_OrderCost_CKW;\n    // Compute the shipping cost for KW\n    if (newState.week.simInput.orders[0].a + newState.week.simInput.orders[0].c > 0) {\n      if (new_OrderCost_ABCKW > companyCatalogue.KW.FREE_SHIPPING_THRESHOLD) {\n        //state.week.simInput.orders[0].a * computedOrderCostForAKW +\n        //state.week.simInput.orders[0].b * computedOrderCostForBKW +\n        //state.week.simInput.orders[0].c *\n        //companyCatalogue.KW.UNIT_PRICE_C_BELOW_DISCOUNT_THRESHOLD >\n        //companyCatalogue.KW.FREE_SHIPPING_THRESHOLD\n        //) {\n        computedShippingCostByKW = 0;\n      } else\n        computedShippingCostByKW = companyCatalogue.KW.TYPICAL_SHIPPING_COST;\n    } else {\n      computedShippingCostByKW = 0;\n    }\n/////adel\n    new_OrderCost_AWWR =\n    newState.week.simInput.orders[1].a *\n      companyCatalogue.WWR.UNIT_PRICE_A_ABOVE_DISCOUNT_THRESHOLD;\n    new_OrderCost_BWWR =\n    newState.week.simInput.orders[1].b *\n      companyCatalogue.WWR.UNIT_PRICE_B_ABOVE_DISCOUNT_THRESHOLD;\n    new_OrderCost_CWWR =\n    newState.week.simInput.orders[1].c *\n      companyCatalogue.WWR.UNIT_PRICE_C_ABOVE_DISCOUNT_THRESHOLD;\n    new_OrderCost_ABCWWR =\n      new_OrderCost_AWWR + new_OrderCost_BWWR + new_OrderCost_CWWR;\n\n    // Compute the shipping cost for WWR\n    if (newState.week.simInput.orders[1].a + newState.week.simInput.orders[1].c > 0) {\n      if (\n        new_OrderCost_ABCWWR > companyCatalogue.WWR.FREE_SHIPPING_THRESHOLD\n        //state.week.simInput.orders[1].a *\n        //companyCatalogue.WWR.UNIT_PRICE_A_ABOVE_DISCOUNT_THRESHOLD +\n        //state.week.simInput.orders[1].b *\n        //companyCatalogue.WWR.UNIT_PRICE_B_ABOVE_DISCOUNT_THRESHOLD +\n        //state.week.simInput.orders[1].c *\n        //companyCatalogue.WWR.UNIT_PRICE_C_ABOVE_DISCOUNT_THRESHOLD >\n        //companyCatalogue.WWR.FREE_SHIPPING_THRESHOLD\n      ) {\n        computedShippingCostByWWR = 0;\n      } else {\n        computedShippingCostByWWR = companyCatalogue.WWR.TYPICAL_SHIPPING_COST;\n      }\n    } else {\n      computedShippingCostByWWR = 0;\n    }\n\n    // Compute the net oder cost of units for ADD, IP, and DP respectively, excluding the shipping cost\n    orderCostFromADD =\n    newState.week.simInput.orders[2].a *\n      companyCatalogue.ADD.UNIT_PRICE_A_ABOVE_DISCOUNT_THRESHOLD;\n    orderCostFromIP =\n    newState.week.simInput.orders[3].b *\n      companyCatalogue.IP.UNIT_PRICE_B_ABOVE_DISCOUNT_THRESHOLD;\n    orderCostFromDP =\n    newState.week.simInput.orders[4].c *\n      companyCatalogue.DP.UNIT_PRICE_C_ABOVE_DISCOUNT_THRESHOLD;\n\n    // Compute the reception cost for KW, WWR, ADD, IP, and DP respectively\n    if (newState.week.simInput.orders[0].a + newState.week.simInput.orders[0].c > 0) {\n      receptionCostForKW = companyCatalogue.KW.RECEPTION_COST;\n    }\n    if (newState.week.simInput.orders[1].a + newState.week.simInput.orders[1].c > 0) {\n      receptionCostForWWR = companyCatalogue.WWR.RECEPTION_COST;\n    }\n    if (newState.week.simInput.orders[2].a > 0) {\n      receptionCostForADD = companyCatalogue.ADD.RECEPTION_COST;\n    }\n    if (newState.week.simInput.orders[3].b > 0) {\n      receptionCostForIP = companyCatalogue.IP.RECEPTION_COST;\n    }\n    if (newState.week.simInput.orders[4].c > 0) {\n      receptionCostForDP = companyCatalogue.DP.RECEPTION_COST;\n    }\n    const totalOrderCost =\n      new_OrderCost_ABCKW +\n      new_OrderCost_ABCWWR +\n      computedShippingCostByKW +\n      computedShippingCostByWWR +\n      orderCostFromADD +\n      orderCostFromIP +\n      orderCostFromDP +\n      receptionCostForKW +\n      receptionCostForWWR +\n      receptionCostForADD +\n      receptionCostForIP +\n      receptionCostForDP;\n\n    newState = update(newState, {\n      week: {\n        simOutput: {\n          results: { ordersCost: { $set: totalOrderCost } },\n        },\n      },\n    });\n\n    // update the profit and accumulated profit\n    newState = this.updateProfitSubTree(newState);\n\n    return newState;\n  }\n\n  simulate(state, event) {\n    if (event.action === \"Sells\") {\n      return this.updateSells(state, event);\n    } else if (event.action === \"Demands\") {\n      return this.updateDemands(state, event);\n    } else if (event.action === \"Orders\") {\n      return this.updateOrders(state, event);\n    } else return {};\n  }\n\n  supplierSelected(state, supplier) {\n    let newState = update(state, { supplier: { info: { $set: supplier } } });\n    if (supplier.id === \"ADD\")\n      newState = update(newState, {\n        supplier: { enabledOrders: { $set: { a: true, b: false, c: false } } },\n      });\n    else if (supplier.id === \"IP\")\n      newState = update(newState, {\n        supplier: { enabledOrders: { $set: { a: false, b: true, c: false } } },\n      });\n    else if (supplier.id === \"DP\")\n      newState = update(newState, {\n        supplier: { enabledOrders: { $set: { a: false, b: false, c: true } } },\n      });\n    else\n      newState = update(newState, {\n        supplier: { enabledOrders: { $set: { a: true, b: true, c: true } } },\n      });\n\n    return newState;\n  }\n\n  initWeek() {\n    return this.createWeek();\n  }\n\n  updateWeekstartSupplier(newState, deliveryTime, supplierId, includeWeekend) {\n    let index = this.currentWeekIndex() - deliveryTime;\n    if (index >= 0) {\n      const orders = this.weeks[index].simInput.orders.find(\n        (ele) => ele.supplierId === supplierId\n      );\n      const { stockA, stockB, stockC } =\n        includeWeekend === true\n          ? this.weeks[index].simOutput.weekEnd\n          : { stockA: 0, stockB: 0, stockC: 0 };\n\n      return update(newState, {\n        week: {\n          simOutput: {\n            weekStart: {\n              $set: {\n                stockA:\n                  newState.week.simOutput.weekStart.stockA + orders.a + stockA,\n                stockB:\n                  newState.week.simOutput.weekStart.stockB + orders.b + stockB,\n                stockC:\n                  newState.week.simOutput.weekStart.stockC + orders.c + stockC,\n              },\n            },\n          },\n        },\n      });\n    }\n    return newState;\n  }\n\n  updateWeekstartStock(newWeek) {\n    let week = this.updateWeekstartSupplier({ week: newWeek }, 0, \"ADD\", true)\n      .week;\n    week = this.updateWeekstartSupplier({ week: week }, 0, \"IP\", false).week;\n    week = this.updateWeekstartSupplier({ week: week }, 0, \"DP\", false).week;\n    week = this.updateWeekstartSupplier({ week: week }, 4, \"WWR\", false).week;\n    week = this.updateWeekstartSupplier({ week: week }, 1, \"KW\", false).week;\n\n    return week;\n  }\n\n  advanceSimulation(week) {\n    // Store this week\n    this.weeks.push(week);\n\n    // Create and update the next week\n    let newWeek = this.createWeek();\n\n    newWeek = this.updateWeekstartStock(newWeek);\n    newWeek = this.updateWeekendStock(\n      { week: newWeek },\n      newWeek.simOutput.weekStart,\n      newWeek.simInput.sells\n    ).week;\n    newWeek = this.updateStorageCost(\n      { week: newWeek },\n      newWeek.simOutput.weekStart,\n      newWeek.simOutput.weekEnd\n    ).week;\n\n    // Compute the profit and accumulated profit\n    newWeek = this.updateProfitSubTree({ week: newWeek }).week;\n\n    console.log(this.weeks);\n    return newWeek;\n  }\n}\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport update from 'immutability-helper';\nimport Header from './Header';\nimport WeekList from './WeekList';\nimport WeekBar from \"./WeekBar\";\nimport Input from './Input';\nimport Output from \"./Output\";\nimport {Core} from '../core/simulate';\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.core = new Core()\n    this.state = {\n      currentWeek: 0,\n      supplier: {\n        enabledOrders: {a: false, b: false, c: false}\n      },\n      week: this.core.initWeek()\n    } \n  }\n  \n  handleNextButton = event => {\n    const newWeek = this.core.advanceSimulation(this.state.week);\n    let newState = update(this.state, {currentWeek: {$set: this.state.currentWeek + 1}});\n    newState = update(newState, {week: {$set: newWeek}});\n    this.setState(newState);\n  };\n\n  handleInput = event => {\n    this.setState(this.core.simulate(this.state, event));\n  };\n\n  handleGraphClick = event => {\n    this.setState(this.core.supplierSelected(this.state, event.target._private.data));\n  };\n\n  render() { \n    return (\n      <div>\n        <Header />\n        <Container>\n          <WeekBar currentWeek={this.state.currentWeek} />\n          <Row>\n            <Col md=\"auto\"> <WeekList/> </Col>\n            <Col>\n              <Row > \n                <Output week={this.state.week}\n                  handleGraphClick={this.handleGraphClick} /> \n              </Row>\n              <Row> \n                <Input simInput={this.state.week.simInput} handleNextButton={this.handleNextButton}\n                  supplier={this.state.supplier} handleInput={this.handleInput}/> \n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}